/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { createFileRoute } from '@tanstack/react-router'

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as PestsNameImport } from './routes/pests/$name'

// Create Virtual Routes

const QuoteLazyImport = createFileRoute('/quote')()
const AboutLazyImport = createFileRoute('/about')()
const IndexLazyImport = createFileRoute('/')()
const PestsIndexLazyImport = createFileRoute('/pests/')()

// Create/Update Routes

const QuoteLazyRoute = QuoteLazyImport.update({
  id: '/quote',
  path: '/quote',
  getParentRoute: () => rootRoute,
} as any).lazy(() => import('./routes/quote.lazy').then((d) => d.Route))

const AboutLazyRoute = AboutLazyImport.update({
  id: '/about',
  path: '/about',
  getParentRoute: () => rootRoute,
} as any).lazy(() => import('./routes/about.lazy').then((d) => d.Route))

const IndexLazyRoute = IndexLazyImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRoute,
} as any).lazy(() => import('./routes/index.lazy').then((d) => d.Route))

const PestsIndexLazyRoute = PestsIndexLazyImport.update({
  id: '/pests/',
  path: '/pests/',
  getParentRoute: () => rootRoute,
} as any).lazy(() => import('./routes/pests/index.lazy').then((d) => d.Route))

const PestsNameRoute = PestsNameImport.update({
  id: '/pests/$name',
  path: '/pests/$name',
  getParentRoute: () => rootRoute,
} as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexLazyImport
      parentRoute: typeof rootRoute
    }
    '/about': {
      id: '/about'
      path: '/about'
      fullPath: '/about'
      preLoaderRoute: typeof AboutLazyImport
      parentRoute: typeof rootRoute
    }
    '/quote': {
      id: '/quote'
      path: '/quote'
      fullPath: '/quote'
      preLoaderRoute: typeof QuoteLazyImport
      parentRoute: typeof rootRoute
    }
    '/pests/$name': {
      id: '/pests/$name'
      path: '/pests/$name'
      fullPath: '/pests/$name'
      preLoaderRoute: typeof PestsNameImport
      parentRoute: typeof rootRoute
    }
    '/pests/': {
      id: '/pests/'
      path: '/pests'
      fullPath: '/pests'
      preLoaderRoute: typeof PestsIndexLazyImport
      parentRoute: typeof rootRoute
    }
  }
}

// Create and export the route tree

export interface FileRoutesByFullPath {
  '/': typeof IndexLazyRoute
  '/about': typeof AboutLazyRoute
  '/quote': typeof QuoteLazyRoute
  '/pests/$name': typeof PestsNameRoute
  '/pests': typeof PestsIndexLazyRoute
}

export interface FileRoutesByTo {
  '/': typeof IndexLazyRoute
  '/about': typeof AboutLazyRoute
  '/quote': typeof QuoteLazyRoute
  '/pests/$name': typeof PestsNameRoute
  '/pests': typeof PestsIndexLazyRoute
}

export interface FileRoutesById {
  __root__: typeof rootRoute
  '/': typeof IndexLazyRoute
  '/about': typeof AboutLazyRoute
  '/quote': typeof QuoteLazyRoute
  '/pests/$name': typeof PestsNameRoute
  '/pests/': typeof PestsIndexLazyRoute
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths: '/' | '/about' | '/quote' | '/pests/$name' | '/pests'
  fileRoutesByTo: FileRoutesByTo
  to: '/' | '/about' | '/quote' | '/pests/$name' | '/pests'
  id: '__root__' | '/' | '/about' | '/quote' | '/pests/$name' | '/pests/'
  fileRoutesById: FileRoutesById
}

export interface RootRouteChildren {
  IndexLazyRoute: typeof IndexLazyRoute
  AboutLazyRoute: typeof AboutLazyRoute
  QuoteLazyRoute: typeof QuoteLazyRoute
  PestsNameRoute: typeof PestsNameRoute
  PestsIndexLazyRoute: typeof PestsIndexLazyRoute
}

const rootRouteChildren: RootRouteChildren = {
  IndexLazyRoute: IndexLazyRoute,
  AboutLazyRoute: AboutLazyRoute,
  QuoteLazyRoute: QuoteLazyRoute,
  PestsNameRoute: PestsNameRoute,
  PestsIndexLazyRoute: PestsIndexLazyRoute,
}

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/",
        "/about",
        "/quote",
        "/pests/$name",
        "/pests/"
      ]
    },
    "/": {
      "filePath": "index.lazy.tsx"
    },
    "/about": {
      "filePath": "about.lazy.tsx"
    },
    "/quote": {
      "filePath": "quote.lazy.tsx"
    },
    "/pests/$name": {
      "filePath": "pests/$name.tsx"
    },
    "/pests/": {
      "filePath": "pests/index.lazy.tsx"
    }
  }
}
ROUTE_MANIFEST_END */
